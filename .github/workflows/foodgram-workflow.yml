name: Django-app workflow

on:
  push:
    branches:
      - 'master'

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    # Cloning the current repo
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r ./backend/requirements.txt 
    - name: Test with flake8
      run: |
        cd ./backend
        python -m flake8 .

  build_backend_and_push_to_docker_hub:
    name: Push backend Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - name: Check out the repo of Docker Hub
      uses: actions/checkout@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1 
    - name: Login to Docker Hub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_USERNAME }} 
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Push to Docker Hub
      uses: docker/build-push-action@v2 
      with:
        context: ./backend/
        push: true
        tags: yo1k/api_foodgram:latest

  build_frontend_and_push_to_docker_hub:
    name: Push frontend Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo of Docker Hub
      uses: actions/checkout@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1 
    - name: Login to Docker Hub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_USERNAME }} 
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Push to Docker Hub
      uses: docker/build-push-action@v2 
      with:
        context: ./frontend/
        push: true
        tags: yo1k/foodgram_frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_backend_and_push_to_docker_hub
      - build_frontend_and_push_to_docker_hub
    steps:
    - name: Executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd ./foodgram/infra/
          docker compose stop
          docker compose rm web
          touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          docker compose up -d
